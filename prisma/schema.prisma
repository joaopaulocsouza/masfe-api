generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String              @id @default(uuid()) @db.VarChar(100)
  name              String              @db.VarChar(255)
  email             String              @unique @db.VarChar(100)
  password          String              @db.VarChar(255)
  gender            String?             @db.VarChar(30)
  occupation        String?             @db.VarChar(100)
  address           String?             @db.VarChar(255)
  birthday          DateTime            @db.Date
  accptanceCriteria AccetanceCriteria[]
  personas          Persona[]
  uxCorrelations    UxCorrelation[]
  verbs             Verb[]

  @@map("users")
}

model Persona {
  id                 String          @id @default(uuid()) @db.VarChar(100)
  name               String          @db.VarChar(100)
  occupation         String?         @db.VarChar(50)
  needs              String          @db.VarChar(400)
  possible_solutions String          @db.VarChar(400)
  user_id            String          @db.VarChar(100)
  gender             String?         @db.VarChar(20)
  age                Int?
  user               User            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  uxCorrelations     UxCorrelation[]

  @@map("personas")
}

model Verb {
  id        String   @id @default(uuid()) @db.VarChar(100)
  verb      String   @unique @db.VarChar(30)
  garret    Int
  dimension Int
  user_id   String   @db.VarChar(100)
  VerbACs   VerbAC[]
  user      User     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("verb")
}

model AccetanceCriteria {
  id        String  @id @default(uuid()) @db.VarChar(100)
  criteria  String  @unique @db.VarChar(255)
  dimension Int
  user_id   String  @db.VarChar(100)
  user      User    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  VerbACs   VerbAC?

  @@map("acceptance_criteria")
}

model VerbAC {
  ac_id          String            @unique @db.VarChar(100)
  verb_id        String            @db.VarChar(100)
  id             String            @id @default(uuid()) @db.VarChar(100)
  ac             AccetanceCriteria @relation(fields: [ac_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  verb           Verb              @relation(fields: [verb_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  uxCorrelations UxCorrelation[]

  @@map("details_verb_ac")
}

model UxCorrelation {
  id          String  @id @default(uuid()) @db.VarChar(100)
  name        String  @db.VarChar(50)
  description String  @db.VarChar(400)
  verb_ac_id  String  @db.VarChar(100)
  user_id     String  @db.VarChar(100)
  persona_id  String  @db.VarChar(100)
  persona     Persona @relation(fields: [persona_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user        User    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  verb_ac     VerbAC  @relation(fields: [verb_ac_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("ux_correlation")
}
